<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Segmentation Fault</title>
    <link>https://blog.nucieda.com/</link>
    <description>Recent content on Segmentation Fault</description>
    <generator>Hugo -- 0.148.1</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 17 Aug 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.nucieda.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Your Home Server Should Be Free*</title>
      <link>https://blog.nucieda.com/posts/home-server/</link>
      <pubDate>Sun, 17 Aug 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.nucieda.com/posts/home-server/</guid>
      <description>&lt;p&gt;I wanted to experiment with all the fancy and cool tools that are built for home servers. Media streaming, file systems, NAS-es, VPNs, etc. I&amp;rsquo;ve always been under the impression that I would need to buy equipment for that, and so always put it off, but recently I realized that might not be the case.&lt;/p&gt;
&lt;h1 id=&#34;the-optiplex&#34;&gt;The Optiplex&lt;/h1&gt;
&lt;p&gt;I got my hands on an old &lt;a href=&#34;https://www.hardware-corner.net/desktop-models/Dell-OptiPlex-3050M/&#34;&gt;Dell Optiplex 3050M&lt;/a&gt; for free from a family member, and after sitting on my desk for months I decided it would be at least worthwhile to see what I could do with it. It&amp;rsquo;s a tiny PC primarily meant for businesses, but silicon is silicon and can be sculpted to be whatever I desire it to be.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Why my sudoku solver sucks.</title>
      <link>https://blog.nucieda.com/posts/sudoku-solver/</link>
      <pubDate>Sat, 12 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.nucieda.com/posts/sudoku-solver/</guid>
      <description>&lt;p&gt;I wanted to make a sudoku solver using backtracking, a project only slightly less common than a todo app. I was genuinely expecting it to take an afternoon and I could be done with it, but as all my projects go, there were a lot of setbacks. Even now, it&amp;rsquo;s not as good as I want it to be, and I&amp;rsquo;ll keep iterating on it. For now let&amp;rsquo;s say this is&lt;/p&gt;</description>
    </item>
    <item>
      <title>Why I won&#39;t be using CMake on my CLI chess app</title>
      <link>https://blog.nucieda.com/posts/gnu-make/</link>
      <pubDate>Sun, 16 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.nucieda.com/posts/gnu-make/</guid>
      <description>&lt;h1 id=&#34;the-mistake&#34;&gt;The Mistake&lt;/h1&gt;
&lt;p&gt;I recently started making a chess app called &lt;code&gt;chessCLI&lt;/code&gt;. The goal is for it to be a CLI interface to play chess and eventually host it on my server so that you can run it just using &lt;code&gt;curl&lt;/code&gt;. Even in its earliest version, it was already the largest C++ project I had ever made, and so manually building wasn&amp;rsquo;t an option. I had already done a lot of projects in C because my first introduction to programming was in a programming school called 42 which taught in C, so I was already quite comfortable with Make, but I wanted to see what else was out there.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
